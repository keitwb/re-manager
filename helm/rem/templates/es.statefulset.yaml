{{ if false }} {{/* Disable the es statefulset */}}
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: es
  labels:
    app: es
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  # This needs to be more advanced to support more than one instance
  replicas: 1
  selector:
    matchLabels:
      app: es
      release: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: es
        release: "{{ .Release.Name }}"
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: Always
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      - name: init-mount
        image: busybox
        imagePullPolicy: Always
        command: ["chown", "1000.1000", "-R", "/usr/share/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: ephemeral
          mountPath: /usr/share/elasticsearch/data
      containers:
      - name: es
        image: quay.io/rem/es:{{ default .Values.defaultTag .Values.esImageTag }}
        environment:
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        - name: cluster.name
          value: rem
        imagePullPolicy: Always
        readinessProbe:
          tcpSocket:
            port: 9200
          initialDelaySeconds: 5
          periodSeconds: 5
        ports:
        - containerPort: 9200
        volumeMounts:
        - name: ephemeral
          mountPath: /usr/share/elasticsearch/data
      volumes:
        - name: ephemeral
          # Run ES out of ephemeral memory since our indexer app automatically reindexes from Mongo
          # if we lose things.  Probably change this to a persistent disk at some point for better
          # availability.
          emptyDir:
            medium: Memory
  {{if not .Values.esEphemeralDisk}}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ default "" .Values.esStorageClassName }}
      resources:
        requests:
          storage: {{ default "8Gi" .Values.esStorageRequest }}
  {{end}}
{{end}}
